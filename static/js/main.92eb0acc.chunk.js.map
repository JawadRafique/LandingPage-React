{"version":3,"sources":["img/moblogin.jpg","img/jawad.png","img/logo.webp","img/bannerlarge.webp","components/Formleft.js","components/Formlogin.js","components/Signup.js","components/Client.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Formleft","Container","class","style","backgroundColor","Row","className","height","margin","marginTop","src","jawad","width","Image","moblogin","thumbnail","fluid","border","Formlogin","position","href","Form","postion","top","transform","Group","controlId","Label","Control","size","type","Button","variant","Signup","Col","xs","md","Client","paddingTop","paddingBottom","paddingLeft","fontSize","padding","id","as","column","sm","placeholder","defaultValue","color","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.92eb0acc.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/moblogin.09fdd2c9.jpg\";","module.exports = __webpack_public_path__ + \"static/media/jawad.40107029.png\";","module.exports = __webpack_public_path__ + \"static/media/logo.da8173c0.webp\";","module.exports = __webpack_public_path__ + \"static/media/bannerlarge.a03a1e21.webp\";","import React from 'react'\r\nimport moblogin from '../img/moblogin.jpg'\r\nimport { Row, Col, Image, Container } from 'react-bootstrap';\r\nimport jawad from '../img/jawad.png';\r\n\r\nconst Formleft = () => {\r\n    return (\r\n        <Container class=\"formleft\" style={{ backgroundColor: \"white\" }}>\r\n            <Row className=\"col-centered\" >\r\n                <div style={{ height: \"50vh\", margin: \"auto\", marginTop: \"50px\" }}>\r\n                    <img src={jawad} width=\"200px\" height=\"250px\" class=\"d-inline-block align-top\" ></img>\r\n                    <p style={{}}>User Experience & interface design<br></br> strategy Saas Solution</p>\r\n                </div>\r\n            </Row>\r\n            <Row>\r\n                <Image src={moblogin} thumbnail fluid style={{ border: \"none\", height: \"50vh\", width: \"100%\" }}></Image>\r\n            </Row>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default Formleft;\r\n","import React from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport { Form, Button } from 'react-bootstrap';\r\n\r\nconst Formlogin = () => {\r\n    return (\r\n        <div style={{ position: \"relative\" }}>\r\n            <p className=\"float-right mt-4\" style={{ width: \"35%\" }} >Having Issue?<span><a href=\"#\"> Get Help</a></span></p>\r\n            <Form style={{ width: \"60%\", postion: \"absolute\", top: \"50%\", margin: \"auto\", transform: \"translate(0, 100%)\" }}>\r\n                <h1>Sign In</h1>\r\n                <p>New Here?<span><a href=\"#\"> Create Account</a></span></p>\r\n                <Form.Group controlId=\"formBasicEmail\">\r\n                    <Form.Label>User Name or Email address</Form.Label>\r\n                    <Form.Control size=\"lg\" type=\"email\" />\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId=\"formBasicPassword\">\r\n                    <Form.Label>Enter Password </Form.Label> <span className=\"float-right\"><a href=\"#\">Forget Password ?</a></span>\r\n                    <Form.Control size=\"lg\" type=\"password\" />\r\n                </Form.Group>\r\n                <Button variant=\"primary\" type=\"submit\">\r\n                    Submit\r\n                </Button>\r\n            </Form>\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default Formlogin;\r\n","import React from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport Formleft from './Formleft';\r\nimport Formlogin from './Formlogin';\r\nimport { Row, Col, Container } from 'react-bootstrap';\r\n\r\n\r\nconst Signup = () => {\r\n\r\n    return (\r\n        <div className=\"form_signup container-flex\" style={{ height: \"100vh\", width: \"100vw\" }}>\r\n            <div className=\"row\">\r\n                <Col xs={12} md={4}>\r\n                    <Formleft />\r\n                </Col>\r\n                <Col xs={12} md={8}>\r\n                    <Formlogin />\r\n                </Col>\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n}\r\nexport default Signup;","import React from 'react'\r\nimport { Form, Button } from 'react-bootstrap';\r\nimport { Row, Col, Image, Container } from 'react-bootstrap';\r\n\r\nfunction Client() {\r\n    return (\r\n        <div style={{ paddingTop: \"50px\", paddingBottom: \"50px\" }}>\r\n            <div>\r\n                <h1 style={{ paddingLeft: \"10px\", fontSize: \"25px\" }}>Add Client</h1>\r\n            </div>\r\n            <hr></hr>\r\n            <div>\r\n                <Form style={{ width: \"70%\", margin: \"auto\", padding: \"50px 50px\" }} id=\"customform\">\r\n                    <Form.Group as={Row} controlId=\"bname\">\r\n                        <Form.Label column sm={2}>\r\n                            Bussiness Name\r\n                    </Form.Label>\r\n                        <Col sm={10}>\r\n                            <Form.Control type=\"text\" placeholder=\"Enter Bussiness Name\" size=\"lg\" />\r\n                        </Col>\r\n                    </Form.Group>\r\n                    <Form.Group as={Row} controlId=\"bcat\">\r\n                        <Form.Label column sm={2}>Bussiness Category</Form.Label>\r\n                        <Col sm={10}>\r\n                            <Form.Control as=\"select\" size=\"lg\">\r\n                                <option>1</option>\r\n                                <option>2</option>\r\n                                <option>3</option>\r\n                                <option>4</option>\r\n                                <option>5</option>\r\n                            </Form.Control>\r\n                        </Col>\r\n                    </Form.Group>\r\n                    <Form.Group as={Row} controlId=\"bsubcat\">\r\n                        <Form.Label column sm={2}>Bussiness Sub Category</Form.Label>\r\n                        <Col sm={10}>\r\n                            <Form.Control as=\"select\" defaultValue=\"\">\r\n                                <option></option>\r\n                                <option>1</option>\r\n                                <option>2</option>\r\n                                <option>3</option>\r\n                                <option>4</option>\r\n                                <option>5</option>\r\n                            </Form.Control>\r\n                        </Col>\r\n                    </Form.Group>\r\n                    <Form.Group as={Row} controlId=\"bemail\">\r\n                        <Form.Label column sm={2}>\r\n                            Business Email\r\n                    </Form.Label>\r\n                        <Col sm={10}>\r\n                            <Form.Control type=\"email\" placeholder=\"Business Email\" size=\"lg\" />\r\n                        </Col>\r\n                    </Form.Group>\r\n                    <Form.Group as={Row} controlId=\"baddress\">\r\n                        <Form.Label column sm={2}>\r\n                            Bussiness Address\r\n                    </Form.Label>\r\n                        <Col sm={10}>\r\n                            <Form.Control placeholder=\"Address Line 1\" size=\"lg\" />\r\n                            <br></br>\r\n                            <Form.Control placeholder=\"Address Line 2\" size=\"lg\" />\r\n                        </Col>\r\n                    </Form.Group>\r\n                    <Form.Group as={Row} controlId=\"salesrep\">\r\n                        <Form.Label column sm={2}>Sales Rep</Form.Label>\r\n                        <Col sm={10}>\r\n                            <Form.Control as=\"select\" size=\"lg\" defaultValue=\"Select Sales Rep\">\r\n                                <option>Select Sales Rep</option>\r\n                                <option>1</option>\r\n                                <option>2</option>\r\n                                <option>3</option>\r\n                                <option>4</option>\r\n                                <option>5</option>\r\n                            </Form.Control>\r\n                        </Col>\r\n                    </Form.Group>\r\n                    <Form.Group as={Row} controlId=\"pmethod\">\r\n                        <Form.Label column sm={2}>\r\n                            Payment Method\r\n                    </Form.Label>\r\n                        <Col sm={10}>\r\n                            <Form.Control type=\"text\" placeholder=\"Payment Method\" size=\"lg\" />\r\n                        </Col>\r\n                    </Form.Group>\r\n                    <Form.Group as={Row} controlId=\"asousing\">\r\n                        <Form.Label column sm={2}>\r\n                            Associate using\r\n                    </Form.Label>\r\n                    </Form.Group>\r\n                    <Button type=\"submit\" className=\"float-right\" style={{ color: \"black\", padding: \"6px 14px\", backgroundColor: \"#add8e6\" }}>Submit</Button>\r\n                </Form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Client;\r\n","import React from 'react';\nimport './App.css';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport '../node_modules/bootstrap/dist/js/bootstrap.bundle';\nimport Signup from './components/Signup';\nimport Client from './components/Client';\nimport Header from './components/Header';\nimport Home from './pages/Home'\nimport About from './pages/About';\nimport Portfolio from './pages/Portfolio';\nimport { BrowserRouter as Router, Switch, Route, Redirect } from 'react-router-dom';\n\nfunction App() {\n  return (\n    <div>\n      <Signup />\n      <Client />\n    </div>\n    // <Router>\n    //   <div className=\"App\">\n    //     <Header />\n    //     <Switch>\n    //       <Route path=\"/\" exact component={Home} />\n    //       <Route path=\"/about\" exact component={About} />\n    //       <Route path=\"/portfolio\" exact component={Portfolio} />\n    //       <Redirect to=\"/\" />\n    //     </Switch>\n    //   </div>\n    // </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}